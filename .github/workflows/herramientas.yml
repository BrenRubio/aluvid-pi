name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  laravel-pipeline:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: aluvid_pi
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    # 1. Verificar el código fuente
    - name: Checkout the code
      uses: actions/checkout@v3

    # 2. Configurar PHP
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo, pdo_mysql
        ini-values: |
          memory_limit=-1
        coverage: none

    # 3. Instalar dependencias
    - name: Install dependencies
      run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

    # 4. Configurar el archivo .env
    - name: Set up .env
      run: cp .env.example .env

    - name: Configure .env database variables
      run: |
        php artisan key:generate
        sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
        sed -i 's/DB_DATABASE=laravel/DB_DATABASE=aluvid_pi/' .env
        sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
        sed -i 's/DB_PASSWORD=/DB_PASSWORD=root/' .env

    # 5. Migrar base de datos
    - name: Run migrations
      run: php artisan migrate --force

    # 6. Ejecutar pruebas
    - name: Run tests
      run: php artisan test

    # 7. Generar archivo ZIP
    - name: Create ZIP artifact
      run: zip -r application.zip ./

    # 8. Almacenar archivo ZIP como artefacto del workflow
    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v3
      with:
        name: application-artifact
        path: application.zip

    # 9. Construcción de la imagen Docker
    - name: Build Docker image
      run: docker build -t my-laravel-app:latest .

    # 10. Despliegue con Docker
    - name: Deploy with Docker
      env:
        DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login $DOCKER_HOST --username $DOCKER_USER --password-stdin
        docker tag my-laravel-app:latest $DOCKER_HOST/my-laravel-app:latest
        docker push $DOCKER_HOST/my-laravel-app:latest
        docker run -d --name laravel-app -p 80:80 $DOCKER_HOST/my-laravel-app:latest
